---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection, type CollectionEntry } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import TagLink from "../../components/TagLink.astro";

type Post = CollectionEntry<'resource'>;

const resources = (await getCollection("resource")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const resourcesByYear: {
  [year: number]: Post[];
} = {}

resources.forEach((resource) => {
  const year = resource.data.pubDate.getFullYear()
  if (!resourcesByYear[year]) {
    resourcesByYear[year] = []
  }
  resourcesByYear[year].push(resource)
})
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="w-full  mx-auto my-4 max-w-screen-md dark:bg-neutral-800 dark:text-neutral-300 transition-colors duration-300">
    <Header />
    <main
      class="w-full max-w-screen-md mx-auto my-4 px-4 flex flex-col gap-4 justify-center"
    >
      {
        Object.keys(resourcesByYear).sort(
          (a, b) => parseInt(b) - parseInt(a)
        ).map((year) => (
          <div class="flex flex-col">
            <h2 class=" text-black dark:text-white font-bold mb-8">{year}</h2>
            <div class="flex flex-col gap-4">
              
            {
              resourcesByYear[parseInt(year)]?.map((resource: Post) => (
              <div class="flex gap-2 justify-between border-b pb-4">
            <div class="flex flex-col gap-4">
              <FormattedDate date={resource.data.pubDate} />
              <a class="font-bold text-lg" href={`/resource/${resource.slug}`}>
                {resource.data.title}
              </a>
              <div class="flex gap-2">
                {resource.data.tags?.map((i: string) => {
                  return <TagLink tag={i} />;
                })}
              </div>
            </div>
            <a href={`/resource/${resource.slug}`}>
              <img
                src={resource.data.heroImage}
                alt=""
                class="w-40 h-24 bg-contain border border-gray-200"
              />
            </a>
          </div>
              ))
            }
            </div>

          </div>
        ))
      }
    </main>
    <Footer />
  </body>
</html>
