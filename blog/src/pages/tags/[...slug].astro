---
import { getCollection } from 'astro:content';
import Header from '../../components/Header.astro';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import TagLink from '../../components/TagLink.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    const resources = await getCollection('resource');
    
    // Merge both collections
    const allItems = [...posts, ...resources];
    
    // Extract tags from all items
    const tags = allItems.flatMap((item) => item.data.tags || []);
    
    // Remove duplicates from tags
    const uniqueTags = [...new Set(tags)];
    
    return uniqueTags.map((tag) => ({
        params: { slug: tag },
        props: { 
            tag, 
            items: allItems.filter((item) => item.data?.tags?.includes(tag as string))
        },
    }));
}

const { tag, items } = Astro.props;
type Item = CollectionEntry<'blog'> | CollectionEntry<'resource'>;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={tag as string} description={"Posts & resources tagged with " + tag as string + "."} />
  </head>
  <body class="w-full flex flex-col mx-auto max-w-screen-md min-h-dvh justify-between dark:bg-neutral-800 dark:text-neutral-300 transition-colors duration-300" >
    <Header />
    <main class="flex flex-col justify-center px-4">
        <h2 class="w-full font-bold text-black dark:text-white mb-8">🗃️ Posts tagged with <span>
            {tag}</span></h1>
        <ul>
            {items.map((item: Item) => (
              <div class="flex gap-2 justify-between border-b pb-4">
              <div class="flex flex-col gap-4">
                <FormattedDate date={item.data.pubDate} />
                <a class="font-bold text-lg" href={item.collection === 'blog' ? `/blog/${item.slug}/` : `/resource/${item.slug}/`}>
                  {item.data.title}
                </a>
                <div class="flex gap-2">
                  {item.data.tags?.map((i: string) => {
                    return <TagLink tag={i} />;
                  })}
                </div>
              </div>
              <a href={item.collection === 'blog' ? `/blog/${item.slug}/` : `/resource/${item.slug}/`}>
                <img
                  src={item.data.heroImage}
                  alt=""
                  class="w-40 h-24 bg-contain border border-gray-200"
                />
              </a>
            </div>
                ))}
        </ul>
    </main>
    <Footer />
  </body>
</html>


